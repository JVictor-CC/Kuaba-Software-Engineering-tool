package br.ucam.kuabaSubsystem.kuabaModel;

//import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

import br.ucam.kuabaSubsystem.repositories.KuabaRepository;

import com.compendium.core.datamodel.NodeSummary;
import com.compendium.core.datamodel.View;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#Idea
 *
 * @version generated on Sat Jun 21 10:48:19 BRT 2008
 */
public interface Idea extends ReasoningElement{
    
//    public NodeSummary getView(View view, int x, int y );

    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#address

    Collection<Question> getAddress();

//    RDFProperty getAddressProperty();

    boolean hasAddress();

    Iterator<Question> listAddress();

    void addAddress(Question newAddress);

    void removeAddress(Question oldAddress);

    void setAddress(Collection<Question> newAddress);


    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#hasArgument

    Collection<Argument> getHasArgument();

//    RDFProperty getHasArgumentProperty();

    boolean hasHasArgument();

    Iterator<Argument> listHasArgument();

    void addHasArgument(Argument newHasArgument);

    void removeHasArgument(Argument oldHasArgument);

    void setHasArgument(Collection<Argument> newHasArgument);


    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#isConcludedBy

    Collection<Decision> getIsConcludedBy();

//    RDFProperty getIsConcludedByProperty();

    boolean hasIsConcludedBy();

    Iterator<Decision> listIsConcludedBy();

    void addIsConcludedBy(Decision newIsConcludedBy);

    void removeIsConcludedBy(Decision oldIsConcludedBy);

    void setIsConcludedBy(Collection<Decision> newIsConcludedBy);


    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#isVersionOf

    Idea getIsVersionOf();

//    RDFProperty getIsVersionOfProperty();

    boolean hasIsVersionOf();

    void setIsVersionOf(Idea newIsVersionOf);


    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#resultsIn

    Collection<Artifact> getResultsIn();

//    RDFProperty getResultsInProperty();

    boolean hasResultsIn();

    Iterator<Artifact> listResultsIn();

    void addResultsIn(Artifact newResultsIn);

    void removeResultsIn(Artifact oldResultsIn);

    void setResultsIn(Collection<Artifact> newResultsIn);

	Idea deepCopy(Map<ReasoningElement, Integer> stageMap, KuabaRepository targetRepository, Question addressedQuestion);
}
