package br.ucam.kuabaSubsystem.kuabaModel.impl;

import br.ucam.kuabaSubsystem.repositories.KuabaRepository;
import java.util.*;

import br.ucam.kuabaSubsystem.kuabaModel.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#Method
 *
 * @version generated on Sat Jun 21 10:48:19 BRT 2008
 */
public class DefaultMethod extends DefaultKuabaElement
         implements Method {

    public DefaultMethod(String id, KuabaRepository repo) {
        super(id, repo);
    }

    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#aggregates

    public Collection<Activity> getAggregates() {
        return getObjectPropertyValues("aggregates");
    }


    public boolean hasAggregates() {
        return hasProperty("aggregates");
    }


    public Iterator<Activity> listAggregates() {
        return getObjectPropertyValues("aggregates").iterator();
    }


    public void addAggregates(Activity newAggregates) {
        addObjectPropertyValue("aggregates", newAggregates);
    }


    public void removeAggregates(Activity oldAggregates) {
        removeObjectPropertyValue("aggregates", oldAggregates);
    }


    public void setAggregates(Collection<Activity> newAggregates) {
        setObjectPropertyValues("aggregates", newAggregates);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#hasDescription

    public String getHasDescription() {
        Collection<String> c = getDataPropertyValues("hasDescription");
        if (c.isEmpty()) return null;
        return c.iterator().next();
    }

    public boolean hasHasDescription() {
        return hasProperty("hasDescription");
    }


    public void setHasDescription(String newHasDescription) {
        Collection c = Collections.singleton(newHasDescription);
        setDataPropertyValues("hasDescription", c);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#hasName

    public String getHasName() {
        Collection<String> c = getDataPropertyValues("hasName");
        if (c.isEmpty()) return null;
        return c.iterator().next();
    }

    public boolean hasHasName() {
        return hasProperty("hasName");
    }


    public void setHasName(String newHasName) {
        Collection c = Collections.singleton(newHasName);
        setDataPropertyValues("hasName", c);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#prescribes

    public Collection<FormalModel> getPrescribes() {
        return getObjectPropertyValues("prescribes");
    }

    public boolean hasPrescribes() {
        return hasProperty("prescribes");
    }


    public Iterator<FormalModel> listPrescribes() {
        return getObjectPropertyValues("prescribes").iterator();
    }


    public void addPrescribes(FormalModel newPrescribes) {
        addObjectPropertyValue("prescribes", newPrescribes);
    }


    public void removePrescribes(FormalModel oldPrescribes) {
        removeObjectPropertyValue("prescribes", oldPrescribes);
    }


    public void setPrescribes(Collection<FormalModel> newPrescribes) {
        setObjectPropertyValues("prescribes", newPrescribes);
    }
}
