package br.ucam.kuabaSubsystem.kuabaModel.impl;

import br.ucam.kuabaSubsystem.repositories.KuabaRepository;

import java.text.ParseException;
import java.util.*;

import br.ucam.kuabaSubsystem.kuabaModel.*;




/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#Decision
 *
 * @version generated on Sat Jun 21 10:48:19 BRT 2008
 */
public class DefaultDecision extends DefaultKuabaElement implements Decision {

    public DefaultDecision(String id, KuabaRepository repo) {
        super(id, repo);
    }

    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#concludes

    public Idea getConcludes() {
        Collection c = getObjectPropertyValues("concludes");
        if (c.isEmpty()) return null;
        return (Idea) c.iterator().next();
    }


    public boolean hasConcludes() {
        return hasProperty("concludes");
    }


    public void setConcludes(Idea newConcludes) {
        Collection c = Collections.singleton(newConcludes);
        setObjectPropertyValues("concludes", c);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#hasDate

    public GregorianCalendar getHasDate() {

        Collection<String> c = getDataPropertyValues("hasDate");
        if (c.isEmpty()) return null;
        
    	String date = c.iterator().next();
        
        DateParser parser = new DateParser();
        GregorianCalendar gregorianDate = null;
    	try {
    		gregorianDate = parser.toGregorianCalendar(date);	
		} catch (ParseException e) {
			
			e.printStackTrace();
		}
		catch (NullPointerException npe) {
			return null;
		}
		
        return gregorianDate;
    }

    public boolean hasHasDate() {
        return hasProperty("hasDate");
    }


    public void setHasDate(GregorianCalendar newHasDate) {
    	
    	DateParser parser = new DateParser();
    	String xmlFormatedDate = parser.toStringFormat(newHasDate);

        Collection c = Collections.singleton(xmlFormatedDate);
        setDataPropertyValues("hasDate", c);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#hasJustification

    public Justification getHasJustification() {
        Collection c = getObjectPropertyValues("hasJustification");
        if (c.isEmpty()) return null;
        
        return (Justification) c.iterator().next();
    }

    public boolean hasHasJustification() {
        return hasProperty("hasJustification");
    }


    public void setHasJustification(Justification newHasJustification) {
        Collection c = Collections.singleton(newHasJustification);
        setObjectPropertyValues("hasJustification", c);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#isAccepted

    public boolean getIsAccepted() {
        Collection<String> c = getDataPropertyValues("isAccepted");
        if (c.isEmpty()) return false;
        
        return c.iterator().next().equals(Boolean.toString(true));
    }

    public boolean hasIsAccepted() {
        return hasProperty("isAccepted");
    }

    public void setIsAccepted(boolean newIsAccepted) {
        Collection c = Collections.singleton(Boolean.toString(newIsAccepted));
        setDataPropertyValues("isAccepted", c);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#isMadeBy

    public Collection<Person> getIsMadeBy() {
        return getObjectPropertyValues("isMadeBy");
    }

    public boolean hasIsMadeBy() {
        return hasProperty("isMadeBy");
    }


    public Iterator<Person> listIsMadeBy() {
        return getObjectPropertyValues("isMadeBy").iterator();
    }


    public void addIsMadeBy(Person newIsMadeBy) {
        addObjectPropertyValue("isMadeBy", newIsMadeBy);
    }


    public void removeIsMadeBy(Person oldIsMadeBy) {
        removeObjectPropertyValue("isMadeBy", oldIsMadeBy);
    }


    public void setIsMadeBy(Collection<Person> newIsMadeBy) {
        setObjectPropertyValues("isMadeBy", newIsMadeBy);
    }    
}
