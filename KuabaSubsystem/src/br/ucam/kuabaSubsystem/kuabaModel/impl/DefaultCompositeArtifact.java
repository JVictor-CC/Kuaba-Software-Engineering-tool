package br.ucam.kuabaSubsystem.kuabaModel.impl;

import br.ucam.kuabaSubsystem.repositories.KuabaRepository;
import java.util.*;

import br.ucam.kuabaSubsystem.kuabaModel.*;



/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#CompositeArtifact
 *
 * @version generated on Sat Jun 21 10:48:19 BRT 2008
 */
public class DefaultCompositeArtifact extends DefaultArtifact implements CompositeArtifact {

    public DefaultCompositeArtifact(String id, KuabaRepository repo) {
        super(id, repo);
    }


    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#compositionFunction

//    public Collection getCompositionFunction() {
//        return getObjectPropertyValues("compositionFunction");
//    }
//
//
//    public boolean hasCompositionFunction() {
//        return hasProperty("compositionFunction");
//    }
//
//
//    public Iterator listCompositionFunction() {
//        return getObjectPropertyValues("compositionFunction").iterator();
//    }
//
//
//    public void addCompositionFunction(Object newCompositionFunction) {
//        addObjectPropertyValue("compositionFunction", newCompositionFunction);
//    }
//
//
//    public void removeCompositionFunction(Object oldCompositionFunction) {
//        removeObjectPropertyValue("compositionFunction", oldCompositionFunction);
//    }
//
//
//    public void setCompositionFunction(Collection newCompositionFunction) {
//        setObjectPropertyValues("compositionFunction", newCompositionFunction);
//    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#compositionOf

    public Collection<Artifact> getCompositionOf() {
        return getObjectPropertyValues("compositionOf");
    }


    public boolean hasCompositionOf() {
        return hasProperty("compositionOf");
    }


    public Iterator<Artifact> listCompositionOf() {
        return getObjectPropertyValues("compositionOf").iterator();
    }


    public void addCompositionOf(Artifact newCompositionOf) {
        addObjectPropertyValue("compositionOf", newCompositionOf);
    }


    public void removeCompositionOf(Artifact oldCompositionOf) {
        removeObjectPropertyValue("compositionOf", oldCompositionOf);
    }


    public void setCompositionOf(Collection<Artifact> newCompositionOf) {
        setObjectPropertyValues("compositionOf", newCompositionOf);
    }



    // Property http://www.tecweb.inf.puc-rio.br/DesignRationale/KuabaOntology.owl#isVersionOf

    public CompositeArtifact getIsVersionOf() {
        Collection c = getObjectPropertyValues("isVersionOf");
        if (c.isEmpty()) return null;
        return (CompositeArtifact) c.iterator().next();
    }


    public boolean hasIsVersionOf() {
        return hasProperty("isVersionOf");
    }


    public void setIsVersionOf(CompositeArtifact newIsVersionOf) {
        Collection c = Collections.singleton(newIsVersionOf);
        setObjectPropertyValues("isVersionOf", c);
    }
}
